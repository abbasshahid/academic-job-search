name: 🕷️ Scrape, Commit & Notify

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'  # weekly on Sundays at midnight UTC
  workflow_dispatch: {}

permissions:
  contents: write

env:
  # Comma-separated list of keywords for email notifications (case-insensitive regex)
  NOTIFY_KEYWORDS: 'phd,graduate,researcher,preadoc,computer'

jobs:
  build_and_scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Save previous jobs JSON
        if: exists('src/prebuilt_jobs.json')
        run: |
          cp src/prebuilt_jobs.json prev_jobs.json

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install scraper dependencies & Playwright
        working-directory: scraper
        run: |
          npm install
          npx playwright install-deps
          npx playwright install

      - name: Run scraper (one-off)
        working-directory: scraper
        run: node server.js

      - name: Detect new job postings matching notification keywords
        id: notify
        run: |
          # diff prev vs new JSON, then filter by NOTIFY_KEYWORDS
          jq -n --argfile old prev_jobs.json --argfile new src/prebuilt_jobs.json '
            [ $new[] as $item
              | select((($old[] | index($item)) | not))
              | select($item.title | ascii_downcase | test($ENV.NOTIFY_KEYWORDS; "i"))
              | "\($item.title) - \($item.url)"
            ]' > new_matches.json
          if [ -s new_matches.json ]; then
            echo "matches<<EOF" >> $GITHUB_ENV
            jq -r '.[]' new_matches.json >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Send email notification
        if: env.matches != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "New Job Listings Matching Keywords"
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: ${{ secrets.SMTP_FROM }}
          body: |
            The following new job postings matched your notification keywords:
            ${{ env.matches }}

      - name: Commit updated jobs JSON
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/prebuilt_jobs.json
          git diff --quiet --cached || git commit -m "chore: update prebuilt_jobs.json"
          git push
