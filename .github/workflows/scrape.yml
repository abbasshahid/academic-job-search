name: 🕷️ Scrape, Commit & Notify

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'  # weekly on Sundays at midnight UTC
  workflow_dispatch: {}

permissions:
  contents: write

env:
  # Comma-separated list of keywords for email notifications (case-insensitive regex)
  NOTIFY_KEYWORDS: 'phd,graduate,researcher,preadoc,assistant'

jobs:
  build_and_scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Save previous jobs JSON (if any)
        run: |
          if [ -f src/prebuilt_jobs.json ]; then
            cp src/prebuilt_jobs.json prev_jobs.json
          else
            echo '[]' > prev_jobs.json
          fi

      - name: Clear previous matches
        run: echo "matches=" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install scraper dependencies & Playwright
        working-directory: scraper
        run: |
          npm install
          npx playwright install-deps
          npx playwright install

      - name: Run scraper (one-off)
        working-directory: scraper
        run: node server.js

      - name: Detect new job postings matching notification keywords
        id: notify
        run: |
          # Diff previous vs new, then filter by NOTIFY_KEYWORDS
          jq -n --slurpfile old prev_jobs.json --slurpfile new src/prebuilt_jobs.json --arg re "$NOTIFY_KEYWORDS" '
            [ $new[0][] as $item
              | select( ($old[0] | index($item)) | not )
              | select($item.title | ascii_downcase | test($re; "i"))
              | "\($item.title) - \($item.url)"
            ]' > new_matches.json

          # Export matches for email step
          if [ -s new_matches.json ]; then
            echo "matches<<EOF" >> $GITHUB_ENV
            jq -r '.[]' new_matches.json >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Send email notification
        if: env.matches != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port:    ${{ secrets.SMTP_PORT }}
          username:       ${{ secrets.SMTP_USERNAME }}
          password:       ${{ secrets.SMTP_PASSWORD }}
          subject: "New Job Listings Matching Keywords"
          to:             ${{ secrets.NOTIFY_EMAIL }}
          from:           ${{ secrets.SMTP_FROM }}
          body: |
            The following new job postings matched your notification keywords:
            ${{ env.matches }}

      - name: Send no-match notification
        if: env.matches == ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port:    ${{ secrets.SMTP_PORT }}
          username:       ${{ secrets.SMTP_USERNAME }}
          password:       ${{ secrets.SMTP_PASSWORD }}
          subject: "Job Update Completed"
          to:             ${{ secrets.NOTIFY_EMAIL }}
          from:           ${{ secrets.SMTP_FROM }}
          body: |
            The job scraping run has completed successfully, but no new postings matched your notification keywords: ${{ env.NOTIFY_KEYWORDS }}


      - name: Commit updated jobs JSON
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/prebuilt_jobs.json
          git diff --quiet --cached || git commit -m "chore: update prebuilt_jobs.json"
          git push
